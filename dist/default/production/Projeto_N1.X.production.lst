

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Oct 03 00:35:20 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4520 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   108                           PORTA equ 0F80h ;# 
   109  0000                     # 273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   110                           PORTB equ 0F81h ;# 
   111  0000                     # 452 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   112                           PORTC equ 0F82h ;# 
   113  0000                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   114                           PORTD equ 0F83h ;# 
   115  0000                     # 776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   116                           PORTE equ 0F84h ;# 
   117  0000                     # 979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   118                           LATA equ 0F89h ;# 
   119  0000                     # 1091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   120                           LATB equ 0F8Ah ;# 
   121  0000                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   122                           LATC equ 0F8Bh ;# 
   123  0000                     # 1315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   124                           LATD equ 0F8Ch ;# 
   125  0000                     # 1427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   126                           LATE equ 0F8Dh ;# 
   127  0000                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   128                           TRISA equ 0F92h ;# 
   129  0000                     # 1484 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   130                           DDRA equ 0F92h ;# 
   131  0000                     # 1701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   132                           TRISB equ 0F93h ;# 
   133  0000                     # 1706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   134                           DDRB equ 0F93h ;# 
   135  0000                     # 1923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   136                           TRISC equ 0F94h ;# 
   137  0000                     # 1928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   138                           DDRC equ 0F94h ;# 
   139  0000                     # 2145 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   140                           TRISD equ 0F95h ;# 
   141  0000                     # 2150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   142                           DDRD equ 0F95h ;# 
   143  0000                     # 2367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   144                           TRISE equ 0F96h ;# 
   145  0000                     # 2372 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   146                           DDRE equ 0F96h ;# 
   147  0000                     # 2531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   148                           OSCTUNE equ 0F9Bh ;# 
   149  0000                     # 2596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   150                           PIE1 equ 0F9Dh ;# 
   151  0000                     # 2673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   152                           PIR1 equ 0F9Eh ;# 
   153  0000                     # 2750 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   154                           IPR1 equ 0F9Fh ;# 
   155  0000                     # 2827 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   156                           PIE2 equ 0FA0h ;# 
   157  0000                     # 2893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   158                           PIR2 equ 0FA1h ;# 
   159  0000                     # 2959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   160                           IPR2 equ 0FA2h ;# 
   161  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   162                           EECON1 equ 0FA6h ;# 
   163  0000                     # 3091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   164                           EECON2 equ 0FA7h ;# 
   165  0000                     # 3098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   166                           EEDATA equ 0FA8h ;# 
   167  0000                     # 3105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   168                           EEADR equ 0FA9h ;# 
   169  0000                     # 3112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   170                           RCSTA equ 0FABh ;# 
   171  0000                     # 3117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   172                           RCSTA1 equ 0FABh ;# 
   173  0000                     # 3322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   174                           TXSTA equ 0FACh ;# 
   175  0000                     # 3327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   176                           TXSTA1 equ 0FACh ;# 
   177  0000                     # 3578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   178                           TXREG equ 0FADh ;# 
   179  0000                     # 3583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   180                           TXREG1 equ 0FADh ;# 
   181  0000                     # 3590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   182                           RCREG equ 0FAEh ;# 
   183  0000                     # 3595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   184                           RCREG1 equ 0FAEh ;# 
   185  0000                     # 3602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   186                           SPBRG equ 0FAFh ;# 
   187  0000                     # 3607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   188                           SPBRG1 equ 0FAFh ;# 
   189  0000                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   190                           SPBRGH equ 0FB0h ;# 
   191  0000                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   192                           T3CON equ 0FB1h ;# 
   193  0000                     # 3733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   194                           TMR3 equ 0FB2h ;# 
   195  0000                     # 3740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   196                           TMR3L equ 0FB2h ;# 
   197  0000                     # 3747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   198                           TMR3H equ 0FB3h ;# 
   199  0000                     # 3754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   200                           CMCON equ 0FB4h ;# 
   201  0000                     # 3844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   202                           CVRCON equ 0FB5h ;# 
   203  0000                     # 3923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   204                           ECCP1AS equ 0FB6h ;# 
   205  0000                     # 3928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   206                           ECCPAS equ 0FB6h ;# 
   207  0000                     # 4085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   208                           PWM1CON equ 0FB7h ;# 
   209  0000                     # 4090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   210                           ECCP1DEL equ 0FB7h ;# 
   211  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   212                           BAUDCON equ 0FB8h ;# 
   213  0000                     # 4228 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   214                           BAUDCTL equ 0FB8h ;# 
   215  0000                     # 4403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   216                           CCP2CON equ 0FBAh ;# 
   217  0000                     # 4482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   218                           CCPR2 equ 0FBBh ;# 
   219  0000                     # 4489 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   220                           CCPR2L equ 0FBBh ;# 
   221  0000                     # 4496 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   222                           CCPR2H equ 0FBCh ;# 
   223  0000                     # 4503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   224                           CCP1CON equ 0FBDh ;# 
   225  0000                     # 4600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   226                           CCPR1 equ 0FBEh ;# 
   227  0000                     # 4607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   228                           CCPR1L equ 0FBEh ;# 
   229  0000                     # 4614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   230                           CCPR1H equ 0FBFh ;# 
   231  0000                     # 4621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   232                           ADCON2 equ 0FC0h ;# 
   233  0000                     # 4692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   234                           ADCON1 equ 0FC1h ;# 
   235  0000                     # 4777 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   236                           ADCON0 equ 0FC2h ;# 
   237  0000                     # 4896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   238                           ADRES equ 0FC3h ;# 
   239  0000                     # 4903 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   240                           ADRESL equ 0FC3h ;# 
   241  0000                     # 4910 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   242                           ADRESH equ 0FC4h ;# 
   243  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   244                           SSPCON2 equ 0FC5h ;# 
   245  0000                     # 5012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   246                           SSPCON1 equ 0FC6h ;# 
   247  0000                     # 5082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   248                           SSPSTAT equ 0FC7h ;# 
   249  0000                     # 5303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   250                           SSPADD equ 0FC8h ;# 
   251  0000                     # 5310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   252                           SSPBUF equ 0FC9h ;# 
   253  0000                     # 5317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   254                           T2CON equ 0FCAh ;# 
   255  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   256                           PR2 equ 0FCBh ;# 
   257  0000                     # 5420 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   258                           MEMCON equ 0FCBh ;# 
   259  0000                     # 5525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   260                           TMR2 equ 0FCCh ;# 
   261  0000                     # 5532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   262                           T1CON equ 0FCDh ;# 
   263  0000                     # 5635 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   264                           TMR1 equ 0FCEh ;# 
   265  0000                     # 5642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   266                           TMR1L equ 0FCEh ;# 
   267  0000                     # 5649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   268                           TMR1H equ 0FCFh ;# 
   269  0000                     # 5656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   270                           RCON equ 0FD0h ;# 
   271  0000                     # 5789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   272                           WDTCON equ 0FD1h ;# 
   273  0000                     # 5817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   274                           HLVDCON equ 0FD2h ;# 
   275  0000                     # 5822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   276                           LVDCON equ 0FD2h ;# 
   277  0000                     # 6087 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   278                           OSCCON equ 0FD3h ;# 
   279  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   280                           T0CON equ 0FD5h ;# 
   281  0000                     # 6253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   282                           TMR0 equ 0FD6h ;# 
   283  0000                     # 6260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   284                           TMR0L equ 0FD6h ;# 
   285  0000                     # 6267 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   286                           TMR0H equ 0FD7h ;# 
   287  0000                     # 6274 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   288                           STATUS equ 0FD8h ;# 
   289  0000                     # 6345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   290                           FSR2 equ 0FD9h ;# 
   291  0000                     # 6352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   292                           FSR2L equ 0FD9h ;# 
   293  0000                     # 6359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   294                           FSR2H equ 0FDAh ;# 
   295  0000                     # 6366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   296                           PLUSW2 equ 0FDBh ;# 
   297  0000                     # 6373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   298                           PREINC2 equ 0FDCh ;# 
   299  0000                     # 6380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   300                           POSTDEC2 equ 0FDDh ;# 
   301  0000                     # 6387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   302                           POSTINC2 equ 0FDEh ;# 
   303  0000                     # 6394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   304                           INDF2 equ 0FDFh ;# 
   305  0000                     # 6401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   306                           BSR equ 0FE0h ;# 
   307  0000                     # 6408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   308                           FSR1 equ 0FE1h ;# 
   309  0000                     # 6415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   310                           FSR1L equ 0FE1h ;# 
   311  0000                     # 6422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   312                           FSR1H equ 0FE2h ;# 
   313  0000                     # 6429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   314                           PLUSW1 equ 0FE3h ;# 
   315  0000                     # 6436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   316                           PREINC1 equ 0FE4h ;# 
   317  0000                     # 6443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   318                           POSTDEC1 equ 0FE5h ;# 
   319  0000                     # 6450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   320                           POSTINC1 equ 0FE6h ;# 
   321  0000                     # 6457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   322                           INDF1 equ 0FE7h ;# 
   323  0000                     # 6464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   324                           WREG equ 0FE8h ;# 
   325  0000                     # 6476 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   326                           FSR0 equ 0FE9h ;# 
   327  0000                     # 6483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   328                           FSR0L equ 0FE9h ;# 
   329  0000                     # 6490 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   330                           FSR0H equ 0FEAh ;# 
   331  0000                     # 6497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   332                           PLUSW0 equ 0FEBh ;# 
   333  0000                     # 6504 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   334                           PREINC0 equ 0FECh ;# 
   335  0000                     # 6511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   336                           POSTDEC0 equ 0FEDh ;# 
   337  0000                     # 6518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   338                           POSTINC0 equ 0FEEh ;# 
   339  0000                     # 6525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   340                           INDF0 equ 0FEFh ;# 
   341  0000                     # 6532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   342                           INTCON3 equ 0FF0h ;# 
   343  0000                     # 6624 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   344                           INTCON2 equ 0FF1h ;# 
   345  0000                     # 6694 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   346                           INTCON equ 0FF2h ;# 
   347  0000                     # 6811 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   348                           PROD equ 0FF3h ;# 
   349  0000                     # 6818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   350                           PRODL equ 0FF3h ;# 
   351  0000                     # 6825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   352                           PRODH equ 0FF4h ;# 
   353  0000                     # 6832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   354                           TABLAT equ 0FF5h ;# 
   355  0000                     # 6841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   356                           TBLPTR equ 0FF6h ;# 
   357  0000                     # 6848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   358                           TBLPTRL equ 0FF6h ;# 
   359  0000                     # 6855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   360                           TBLPTRH equ 0FF7h ;# 
   361  0000                     # 6862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   362                           TBLPTRU equ 0FF8h ;# 
   363  0000                     # 6871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   364                           PCLAT equ 0FF9h ;# 
   365  0000                     # 6878 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   366                           PC equ 0FF9h ;# 
   367  0000                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   368                           PCL equ 0FF9h ;# 
   369  0000                     # 6892 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   370                           PCLATH equ 0FFAh ;# 
   371  0000                     # 6899 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   372                           PCLATU equ 0FFBh ;# 
   373  0000                     # 6906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   374                           STKPTR equ 0FFCh ;# 
   375  0000                     # 6980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   376                           TOS equ 0FFDh ;# 
   377  0000                     # 6987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   378                           TOSL equ 0FFDh ;# 
   379  0000                     # 6994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   380                           TOSH equ 0FFEh ;# 
   381  0000                     # 7001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   382                           TOSU equ 0FFFh ;# 
   383  0000                     	FNCALL	_main,_init_regs
   384                           	FNCALL	_main,_set_values_display
   385                           	FNCALL	_set_values_display,_mask
   386                           	FNROOT	_main
   387                           	FNCALL	_isr,_set_incr
   388                           	FNCALL	intlevel2,_isr
   389                           	global	intlevel2
   390                           	FNROOT	intlevel2
   391                           	global	_stop
   392                           	global	_count
   393                           	global	_disp_4
   394                           	global	_disp_3
   395                           	global	_disp_2
   396                           	global	_disp_1
   397                           	global	_TRISD
   398                           _TRISD	set	0xF95
   399  0000                     	global	_TRISA
   400                           _TRISA	set	0xF92
   401  0000                     	global	_PORTA
   402                           _PORTA	set	0xF80
   403  0000                     	global	_ADCON1
   404                           _ADCON1	set	0xFC1
   405  0000                     	global	_TMR0L
   406                           _TMR0L	set	0xFD6
   407  0000                     	global	_T0CON
   408                           _T0CON	set	0xFD5
   409  0000                     	global	_INTCON2bits
   410                           _INTCON2bits	set	0xFF1
   411  0000                     	global	_INTCON3bits
   412                           _INTCON3bits	set	0xFF0
   413  0000                     	global	_INTCONbits
   414                           _INTCONbits	set	0xFF2
   415  0000                     	global	_RCONbits
   416                           _RCONbits	set	0xFD0
   417  0000                     	global	_PORTAbits
   418                           _PORTAbits	set	0xF80
   419  0000                     	global	_PORTD
   420                           _PORTD	set	0xF83
   421  0000                     ; #config settings
   422                           global __CFG_OSC$HS
   423                           __CFG_OSC$HS equ 0x0
   424  0000                     global __CFG_FCMEN$OFF
   425                           __CFG_FCMEN$OFF equ 0x0
   426  0000                     global __CFG_IESO$OFF
   427                           __CFG_IESO$OFF equ 0x0
   428  0000                     global __CFG_PWRT$OFF
   429                           __CFG_PWRT$OFF equ 0x0
   430  0000                     global __CFG_BORV$3
   431                           __CFG_BORV$3 equ 0x0
   432  0000                     global __CFG_WDT$OFF
   433                           __CFG_WDT$OFF equ 0x0
   434  0000                     global __CFG_WDTPS$32768
   435                           __CFG_WDTPS$32768 equ 0x0
   436  0000                     global __CFG_PBADEN$ON
   437                           __CFG_PBADEN$ON equ 0x0
   438  0000                     global __CFG_LPT1OSC$OFF
   439                           __CFG_LPT1OSC$OFF equ 0x0
   440  0000                     global __CFG_MCLRE$ON
   441                           __CFG_MCLRE$ON equ 0x0
   442  0000                     global __CFG_STVREN$ON
   443                           __CFG_STVREN$ON equ 0x0
   444  0000                     global __CFG_LVP$ON
   445                           __CFG_LVP$ON equ 0x0
   446  0000                     global __CFG_XINST$OFF
   447                           __CFG_XINST$OFF equ 0x0
   448  0000                     global __CFG_CP0$OFF
   449                           __CFG_CP0$OFF equ 0x0
   450  0000                     global __CFG_CP1$OFF
   451                           __CFG_CP1$OFF equ 0x0
   452  0000                     global __CFG_CP2$OFF
   453                           __CFG_CP2$OFF equ 0x0
   454  0000                     global __CFG_CP3$OFF
   455                           __CFG_CP3$OFF equ 0x0
   456  0000                     global __CFG_CPB$OFF
   457                           __CFG_CPB$OFF equ 0x0
   458  0000                     global __CFG_CPD$OFF
   459                           __CFG_CPD$OFF equ 0x0
   460  0000                     global __CFG_WRT0$OFF
   461                           __CFG_WRT0$OFF equ 0x0
   462  0000                     global __CFG_WRT1$OFF
   463                           __CFG_WRT1$OFF equ 0x0
   464  0000                     global __CFG_WRT2$OFF
   465                           __CFG_WRT2$OFF equ 0x0
   466  0000                     global __CFG_WRT3$OFF
   467                           __CFG_WRT3$OFF equ 0x0
   468  0000                     global __CFG_WRTC$OFF
   469                           __CFG_WRTC$OFF equ 0x0
   470  0000                     global __CFG_WRTB$OFF
   471                           __CFG_WRTB$OFF equ 0x0
   472  0000                     global __CFG_WRTD$OFF
   473                           __CFG_WRTD$OFF equ 0x0
   474  0000                     global __CFG_EBTR0$OFF
   475                           __CFG_EBTR0$OFF equ 0x0
   476  0000                     global __CFG_EBTR1$OFF
   477                           __CFG_EBTR1$OFF equ 0x0
   478  0000                     global __CFG_EBTR2$OFF
   479                           __CFG_EBTR2$OFF equ 0x0
   480  0000                     global __CFG_EBTR3$OFF
   481                           __CFG_EBTR3$OFF equ 0x0
   482  0000                     global __CFG_EBTRB$OFF
   483                           __CFG_EBTRB$OFF equ 0x0
   484  0000                     	file	"C:\Users\Pablo\AppData\Local\Temp\s3bs."
   485                           	line	#
   486                           psect	cinit,class=CODE,delta=1,reloc=2
   487                           global __pcinit
   488                           __pcinit:
   489  00038E                     global start_initialization
   490                           start_initialization:
   491  00038E                     
   492                           global __initialization
   493                           __initialization:
   494  00038E                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
   495                           global __pbssCOMRAM
   496                           __pbssCOMRAM:
   497  00000E                     	global	_stop
   498                           _stop:
   499  00000E                            ds      2
   500  00000E                     	global	_count
   501                           _count:
   502  000010                            ds      2
   503  000010                     	global	_disp_4
   504                           _disp_4:
   505  000012                            ds      2
   506  000012                     	global	_disp_3
   507                           _disp_3:
   508  000014                            ds      2
   509  000014                     	global	_disp_2
   510                           _disp_2:
   511  000016                            ds      2
   512  000016                     	global	_disp_1
   513                           _disp_1:
   514  000018                            ds      2
   515  000018                     	file	"C:\Users\Pablo\AppData\Local\Temp\s3bs."
   516                           	line	#
   517                           psect	cinit
   518                           ; Clear objects allocated to COMRAM (12 bytes)
   519                           	global __pbssCOMRAM
   520                           lfsr	0,__pbssCOMRAM
   521  00038E  EE00  F00E         movlw	12
   522  000392  0E0C               clear_0:
   523  000394                     clrf	postinc0,c
   524  000394  6AEE               decf	wreg
   525  000396  06E8               bnz	clear_0
   526  000398  E1FD               psect cinit,class=CODE,delta=1
   527                           global end_of_initialization,__end_of__initialization
   528                           
   529                           ;End of C runtime variable initialization code
   530                           
   531                           end_of_initialization:
   532  00039A                     __end_of__initialization:
   533  00039A                     	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
   534  00039A  901A               	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
   535  00039C  921A               	GLOBAL	__Lmediumconst
   536                           	movlw	low highword(__Lmediumconst)
   537  00039E  0E00               	movwf	tblptru
   538  0003A0  6EF8               movlb 0
   539  0003A2  0100               goto _main	;jump to C main() function
   540  0003A4  EFAB  F001         psect	cstackCOMRAM,class=COMRAM,space=1,noexec
   541                           global __pcstackCOMRAM
   542                           __pcstackCOMRAM:
   543  000001                     ?_set_incr:	; 1 bytes @ 0x0
   544  000001                     ??_set_incr:	; 1 bytes @ 0x0
   545  000001                     ?_init_regs:	; 1 bytes @ 0x0
   546  000001                     ??_init_regs:	; 1 bytes @ 0x0
   547  000001                     ?_isr:	; 1 bytes @ 0x0
   548  000001                     ??_isr:	; 1 bytes @ 0x0
   549  000001                     ?_main:	; 1 bytes @ 0x0
   550  000001                     	global	?_mask
   551                           ?_mask:	; 2 bytes @ 0x0
   552  000001                     	global	mask@num
   553                           mask@num:	; 2 bytes @ 0x0
   554  000001                     	ds   2
   555  000001                     ??_mask:	; 1 bytes @ 0x2
   556  000003                     	ds   2
   557  000003                     ?_set_values_display:	; 1 bytes @ 0x4
   558  000005                     	global	set_values_display@disp1
   559                           set_values_display@disp1:	; 2 bytes @ 0x4
   560  000005                     	ds   2
   561  000005                     	global	set_values_display@disp2
   562                           set_values_display@disp2:	; 2 bytes @ 0x6
   563  000007                     	ds   2
   564  000007                     	global	set_values_display@disp3
   565                           set_values_display@disp3:	; 2 bytes @ 0x8
   566  000009                     	ds   2
   567  000009                     	global	set_values_display@disp4
   568                           set_values_display@disp4:	; 2 bytes @ 0xA
   569  00000B                     	ds   2
   570  00000B                     ??_set_values_display:	; 1 bytes @ 0xC
   571  00000D                     	ds   1
   572  00000D                     ??_main:	; 1 bytes @ 0xD
   573  00000E                     ;!
   574                           ;!Data Sizes:
   575                           ;!    Strings     0
   576                           ;!    Constant    0
   577                           ;!    Data        0
   578                           ;!    BSS         12
   579                           ;!    Persistent  0
   580                           ;!    Stack       0
   581                           ;!
   582                           ;!Auto Spaces:
   583                           ;!    Space          Size  Autos    Used
   584                           ;!    COMRAM          126     13      25
   585                           ;!    BANK0           128      0       0
   586                           ;!    BANK1           256      0       0
   587                           ;!    BANK2           256      0       0
   588                           ;!    BANK3           256      0       0
   589                           ;!    BANK4           256      0       0
   590                           ;!    BANK5           256      0       0
   591                           
   592                           ;!
   593                           ;!Pointer List with Targets:
   594                           ;!
   595                           ;!    None.
   596                           
   597                           
   598                           ;!
   599                           ;!Critical Paths under _main in COMRAM
   600                           ;!
   601                           ;!    _main->_set_values_display
   602                           ;!    _set_values_display->_mask
   603                           ;!
   604                           ;!Critical Paths under _isr in COMRAM
   605                           ;!
   606                           ;!    None.
   607                           ;!
   608                           ;!Critical Paths under _main in BANK0
   609                           ;!
   610                           ;!    None.
   611                           ;!
   612                           ;!Critical Paths under _isr in BANK0
   613                           ;!
   614                           ;!    None.
   615                           ;!
   616                           ;!Critical Paths under _main in BANK1
   617                           ;!
   618                           ;!    None.
   619                           ;!
   620                           ;!Critical Paths under _isr in BANK1
   621                           ;!
   622                           ;!    None.
   623                           ;!
   624                           ;!Critical Paths under _main in BANK2
   625                           ;!
   626                           ;!    None.
   627                           ;!
   628                           ;!Critical Paths under _isr in BANK2
   629                           ;!
   630                           ;!    None.
   631                           ;!
   632                           ;!Critical Paths under _main in BANK3
   633                           ;!
   634                           ;!    None.
   635                           ;!
   636                           ;!Critical Paths under _isr in BANK3
   637                           ;!
   638                           ;!    None.
   639                           ;!
   640                           ;!Critical Paths under _main in BANK4
   641                           ;!
   642                           ;!    None.
   643                           ;!
   644                           ;!Critical Paths under _isr in BANK4
   645                           ;!
   646                           ;!    None.
   647                           ;!
   648                           ;!Critical Paths under _main in BANK5
   649                           ;!
   650                           ;!    None.
   651                           ;!
   652                           ;!Critical Paths under _isr in BANK5
   653                           ;!
   654                           ;!    None.
   655                           
   656 ;;
   657 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   658 ;;
   659                           
   660                           ;!
   661                           ;!Call Graph Tables:
   662                           ;!
   663                           ;! ---------------------------------------------------------------------------------
   664                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   665                           ;! ---------------------------------------------------------------------------------
   666                           ;! (0) _main                                                 0     0      0     718
   667                           ;!                          _init_regs
   668                           ;!                 _set_values_display
   669                           ;! ---------------------------------------------------------------------------------
   670                           ;! (1) _set_values_display                                   9     1      8     718
   671                           ;!                                              4 COMRAM     9     1      8
   672                           ;!                               _mask
   673                           ;! ---------------------------------------------------------------------------------
   674                           ;! (2) _mask                                                 4     2      2     326
   675                           ;!                                              0 COMRAM     4     2      2
   676                           ;! ---------------------------------------------------------------------------------
   677                           ;! (1) _init_regs                                            0     0      0       0
   678                           ;! ---------------------------------------------------------------------------------
   679                           ;! Estimated maximum stack depth 2
   680                           ;! ---------------------------------------------------------------------------------
   681                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   682                           ;! ---------------------------------------------------------------------------------
   683                           ;! (3) _isr                                                  0     0      0       0
   684                           ;!                           _set_incr
   685                           ;! ---------------------------------------------------------------------------------
   686                           ;! (4) _set_incr                                             0     0      0       0
   687                           ;! ---------------------------------------------------------------------------------
   688                           ;! Estimated maximum stack depth 4
   689                           ;! ---------------------------------------------------------------------------------
   690                           ;!
   691                           ;! Call Graph Graphs:
   692                           ;!
   693                           ;! _main (ROOT)
   694                           ;!   _init_regs
   695                           ;!   _set_values_display
   696                           ;!     _mask
   697                           ;!
   698                           ;! _isr (ROOT)
   699                           ;!   _set_incr
   700                           ;!
   701                           
   702                           ;! Address spaces:
   703                           
   704                           ;!Name               Size   Autos  Total    Cost      Usage
   705                           ;!BIGRAM             5FF      0       0      17        0.0%
   706                           ;!EEDATA             100      0       0       0        0.0%
   707                           ;!BITBANK5           100      0       0      16        0.0%
   708                           ;!BANK5              100      0       0      14        0.0%
   709                           ;!BITBANK4           100      0       0      12        0.0%
   710                           ;!BANK4              100      0       0      13        0.0%
   711                           ;!BITBANK3           100      0       0      10        0.0%
   712                           ;!BANK3              100      0       0      11        0.0%
   713                           ;!BITBANK2           100      0       0       8        0.0%
   714                           ;!BANK2              100      0       0       9        0.0%
   715                           ;!BITBANK1           100      0       0       6        0.0%
   716                           ;!BANK1              100      0       0       7        0.0%
   717                           ;!BITBANK0            80      0       0       4        0.0%
   718                           ;!BANK0               80      0       0       5        0.0%
   719                           ;!BITCOMRAM           7E      0       0       0        0.0%
   720                           ;!COMRAM              7E      D      19       1       19.8%
   721                           ;!BITSFR               0      0       0     200        0.0%
   722                           ;!SFR                  0      0       0     200        0.0%
   723                           ;!STACK                0      0       0       2        0.0%
   724                           ;!NULL                 0      0       0       0        0.0%
   725                           ;!ABS                  0      0      19      15        0.0%
   726                           ;!DATA                 0      0      19       3        0.0%
   727                           ;!CODE                 0      0       0       0        0.0%
   728                           
   729                           	global	_main
   730                           
   731 ;; *************** function _main *****************
   732 ;; Defined at:
   733 ;;		line 164 in file "interrupcao.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;		None
   736 ;; Auto vars:     Size  Location     Type
   737 ;;		None
   738 ;; Return value:  Size  Location     Type
   739 ;;                  1    wreg      void 
   740 ;; Registers used:
   741 ;;		wreg, status,2, status,0, cstack
   742 ;; Tracked objects:
   743 ;;		On entry : 0/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   747 ;;      Params:         0       0       0       0       0       0       0
   748 ;;      Locals:         0       0       0       0       0       0       0
   749 ;;      Temps:          0       0       0       0       0       0       0
   750 ;;      Totals:         0       0       0       0       0       0       0
   751 ;;Total ram usage:        0 bytes
   752 ;; Hardware stack levels required when called:    4
   753 ;; This function calls:
   754 ;;		_init_regs
   755 ;;		_set_values_display
   756 ;; This function is called by:
   757 ;;		Startup code after reset
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           psect	text0,class=CODE,space=0,reloc=2,group=0
   761                           	file	"interrupcao.c"
   762                           	line	164
   763                           global __ptext0
   764                           __ptext0:
   765  000356                     psect	text0
   766                           	file	"interrupcao.c"
   767                           	line	164
   768                           	global	__size_of_main
   769                           	__size_of_main	equ	__end_of_main-_main
   770  0000                     	
   771                           _main:
   772  000356                     ;incstack = 0
   773                           	opt	stack 27
   774                           	line	165
   775                           	
   776                           l1053:
   777  000356                     ;interrupcao.c: 165: init_regs();
   778                           	call	_init_regs	;wreg free
   779  000356  EC80  F001         	goto	l1055
   780  00035A  EFAF  F001         	line	166
   781                           ;interrupcao.c: 166: while (1) {
   782                           	
   783                           l86:
   784  00035E                     	line	167
   785                           	
   786                           l1055:
   787  00035E                     ;interrupcao.c: 167: set_values_display(disp_1, disp_2, disp_3, disp_4);
   788                           	movff	(c:_disp_1),(c:set_values_display@disp1)
   789  00035E  C018  F005         	movff	(c:_disp_1+1),(c:set_values_display@disp1+1)
   790  000362  C019  F006         	movff	(c:_disp_2),(c:set_values_display@disp2)
   791  000366  C016  F007         	movff	(c:_disp_2+1),(c:set_values_display@disp2+1)
   792  00036A  C017  F008         	movff	(c:_disp_3),(c:set_values_display@disp3)
   793  00036E  C014  F009         	movff	(c:_disp_3+1),(c:set_values_display@disp3+1)
   794  000372  C015  F00A         	movff	(c:_disp_4),(c:set_values_display@disp4)
   795  000376  C012  F00B         	movff	(c:_disp_4+1),(c:set_values_display@disp4+1)
   796  00037A  C013  F00C         	call	_set_values_display	;wreg free
   797  00037E  EC37  F001         	goto	l1055
   798  000382  EFAF  F001         	line	168
   799                           	
   800                           l87:
   801  000386                     	line	166
   802                           	goto	l1055
   803  000386  EFAF  F001         	
   804                           l88:
   805  00038A                     	line	169
   806                           	
   807                           l89:
   808  00038A                     	global	start
   809                           	goto	start
   810  00038A  EF07  F000         	opt stack 0
   811                           GLOBAL	__end_of_main
   812                           	__end_of_main:
   813  00038E                     	signat	_main,89
   814                           	global	_set_values_display
   815                           
   816 ;; *************** function _set_values_display *****************
   817 ;; Defined at:
   818 ;;		line 70 in file "interrupcao.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;  disp1           2    4[COMRAM] unsigned short 
   821 ;;  disp2           2    6[COMRAM] unsigned short 
   822 ;;  disp3           2    8[COMRAM] unsigned short 
   823 ;;  disp4           2   10[COMRAM] unsigned short 
   824 ;; Auto vars:     Size  Location     Type
   825 ;;		None
   826 ;; Return value:  Size  Location     Type
   827 ;;                  1    wreg      void 
   828 ;; Registers used:
   829 ;;		wreg, status,2, status,0, cstack
   830 ;; Tracked objects:
   831 ;;		On entry : 0/0
   832 ;;		On exit  : 0/0
   833 ;;		Unchanged: 0/0
   834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   835 ;;      Params:         8       0       0       0       0       0       0
   836 ;;      Locals:         0       0       0       0       0       0       0
   837 ;;      Temps:          1       0       0       0       0       0       0
   838 ;;      Totals:         9       0       0       0       0       0       0
   839 ;;Total ram usage:        9 bytes
   840 ;; Hardware stack levels used:    1
   841 ;; Hardware stack levels required when called:    3
   842 ;; This function calls:
   843 ;;		_mask
   844 ;; This function is called by:
   845 ;;		_main
   846 ;; This function uses a non-reentrant model
   847 ;;
   848                           psect	text1,class=CODE,space=0,reloc=2,group=0
   849                           	line	70
   850                           global __ptext1
   851                           __ptext1:
   852  00026E                     psect	text1
   853                           	file	"interrupcao.c"
   854                           	line	70
   855                           	global	__size_of_set_values_display
   856                           	__size_of_set_values_display	equ	__end_of_set_values_display-_set_values_display
   857  0000                     	
   858                           _set_values_display:
   859  00026E                     ;incstack = 0
   860                           	opt	stack 27
   861                           	line	71
   862                           	
   863                           l1025:
   864  00026E                     ;interrupcao.c: 71: PORTD = mask(disp1);
   865                           	movff	(c:set_values_display@disp1),(c:mask@num)
   866  00026E  C005  F001         	movff	(c:set_values_display@disp1+1),(c:mask@num+1)
   867  000272  C006  F002         	call	_mask	;wreg free
   868  000276  EC09  F000         	movf	(0+?_mask),c,w
   869  00027A  5001               	movwf	((c:3971)),c	;volatile
   870  00027C  6E83               	line	72
   871                           	
   872                           l1027:
   873  00027E                     ;interrupcao.c: 72: PORTAbits.RA2 = 1;
   874                           	bsf	((c:3968)),c,2	;volatile
   875  00027E  8480               	line	73
   876                           	
   877                           l1029:
   878  000280                     ;interrupcao.c: 73: _delay((unsigned long)((4)*(4000000/4000.0)));
   879                           	opt asmopt_push
   880                           opt asmopt_off
   881                           movlw	6
   882  000280  0E06               movwf	(??_set_values_display+0+0)&0ffh,c,f
   883  000282  6E0D               	movlw	48
   884  000284  0E30               u107:
   885  000286                     decfsz	wreg,f
   886  000286  2EE8               	bra	u107
   887  000288  D7FE               	decfsz	(??_set_values_display+0+0)&0ffh,c,f
   888  00028A  2E0D               	bra	u107
   889  00028C  D7FC               	nop2
   890  00028E  D000               opt asmopt_pop
   891                           
   892                           	line	74
   893                           	
   894                           l1031:
   895  000290                     ;interrupcao.c: 74: PORTAbits.RA2 = 0;
   896                           	bcf	((c:3968)),c,2	;volatile
   897  000290  9480               	line	76
   898                           	
   899                           l1033:
   900  000292                     ;interrupcao.c: 76: PORTD = mask(disp2);
   901                           	movff	(c:set_values_display@disp2),(c:mask@num)
   902  000292  C007  F001         	movff	(c:set_values_display@disp2+1),(c:mask@num+1)
   903  000296  C008  F002         	call	_mask	;wreg free
   904  00029A  EC09  F000         	movf	(0+?_mask),c,w
   905  00029E  5001               	movwf	((c:3971)),c	;volatile
   906  0002A0  6E83               	line	77
   907                           	
   908                           l1035:
   909  0002A2                     ;interrupcao.c: 77: PORTAbits.RA3 = 1;
   910                           	bsf	((c:3968)),c,3	;volatile
   911  0002A2  8680               	line	78
   912                           ;interrupcao.c: 78: _delay((unsigned long)((4)*(4000000/4000.0)));
   913                           	opt asmopt_push
   914                           opt asmopt_off
   915                           movlw	6
   916  0002A4  0E06               movwf	(??_set_values_display+0+0)&0ffh,c,f
   917  0002A6  6E0D               	movlw	48
   918  0002A8  0E30               u117:
   919  0002AA                     decfsz	wreg,f
   920  0002AA  2EE8               	bra	u117
   921  0002AC  D7FE               	decfsz	(??_set_values_display+0+0)&0ffh,c,f
   922  0002AE  2E0D               	bra	u117
   923  0002B0  D7FC               	nop2
   924  0002B2  D000               opt asmopt_pop
   925                           
   926                           	line	79
   927                           	
   928                           l1037:
   929  0002B4                     ;interrupcao.c: 79: PORTAbits.RA3 = 0;
   930                           	bcf	((c:3968)),c,3	;volatile
   931  0002B4  9680               	line	81
   932                           	
   933                           l1039:
   934  0002B6                     ;interrupcao.c: 81: PORTD = mask(disp3);
   935                           	movff	(c:set_values_display@disp3),(c:mask@num)
   936  0002B6  C009  F001         	movff	(c:set_values_display@disp3+1),(c:mask@num+1)
   937  0002BA  C00A  F002         	call	_mask	;wreg free
   938  0002BE  EC09  F000         	movf	(0+?_mask),c,w
   939  0002C2  5001               	movwf	((c:3971)),c	;volatile
   940  0002C4  6E83               	line	82
   941                           	
   942                           l1041:
   943  0002C6                     ;interrupcao.c: 82: PORTAbits.RA4 = 1;
   944                           	bsf	((c:3968)),c,4	;volatile
   945  0002C6  8880               	line	83
   946                           	
   947                           l1043:
   948  0002C8                     ;interrupcao.c: 83: _delay((unsigned long)((4)*(4000000/4000.0)));
   949                           	opt asmopt_push
   950                           opt asmopt_off
   951                           movlw	6
   952  0002C8  0E06               movwf	(??_set_values_display+0+0)&0ffh,c,f
   953  0002CA  6E0D               	movlw	48
   954  0002CC  0E30               u127:
   955  0002CE                     decfsz	wreg,f
   956  0002CE  2EE8               	bra	u127
   957  0002D0  D7FE               	decfsz	(??_set_values_display+0+0)&0ffh,c,f
   958  0002D2  2E0D               	bra	u127
   959  0002D4  D7FC               	nop2
   960  0002D6  D000               opt asmopt_pop
   961                           
   962                           	line	84
   963                           	
   964                           l1045:
   965  0002D8                     ;interrupcao.c: 84: PORTAbits.RA4 = 0;
   966                           	bcf	((c:3968)),c,4	;volatile
   967  0002D8  9880               	line	86
   968                           ;interrupcao.c: 86: PORTD = mask(disp4);
   969                           	movff	(c:set_values_display@disp4),(c:mask@num)
   970  0002DA  C00B  F001         	movff	(c:set_values_display@disp4+1),(c:mask@num+1)
   971  0002DE  C00C  F002         	call	_mask	;wreg free
   972  0002E2  EC09  F000         	movf	(0+?_mask),c,w
   973  0002E6  5001               	movwf	((c:3971)),c	;volatile
   974  0002E8  6E83               	line	87
   975                           	
   976                           l1047:
   977  0002EA                     ;interrupcao.c: 87: PORTAbits.RA5 = 1;
   978                           	bsf	((c:3968)),c,5	;volatile
   979  0002EA  8A80               	line	88
   980                           	
   981                           l1049:
   982  0002EC                     ;interrupcao.c: 88: _delay((unsigned long)((4)*(4000000/4000.0)));
   983                           	opt asmopt_push
   984                           opt asmopt_off
   985                           movlw	6
   986  0002EC  0E06               movwf	(??_set_values_display+0+0)&0ffh,c,f
   987  0002EE  6E0D               	movlw	48
   988  0002F0  0E30               u137:
   989  0002F2                     decfsz	wreg,f
   990  0002F2  2EE8               	bra	u137
   991  0002F4  D7FE               	decfsz	(??_set_values_display+0+0)&0ffh,c,f
   992  0002F6  2E0D               	bra	u137
   993  0002F8  D7FC               	nop2
   994  0002FA  D000               opt asmopt_pop
   995                           
   996                           	line	89
   997                           	
   998                           l1051:
   999  0002FC                     ;interrupcao.c: 89: PORTAbits.RA5 = 0;
  1000                           	bcf	((c:3968)),c,5	;volatile
  1001  0002FC  9A80               	line	90
  1002                           	
  1003                           l56:
  1004  0002FE                     	return	;funcret
  1005  0002FE  0012               	opt stack 0
  1006                           GLOBAL	__end_of_set_values_display
  1007                           	__end_of_set_values_display:
  1008  000300                     	signat	_set_values_display,16505
  1009                           	global	_mask
  1010                           
  1011 ;; *************** function _mask *****************
  1012 ;; Defined at:
  1013 ;;		line 55 in file "interrupcao.c"
  1014 ;; Parameters:    Size  Location     Type
  1015 ;;  num             2    0[COMRAM] unsigned short 
  1016 ;; Auto vars:     Size  Location     Type
  1017 ;;		None
  1018 ;; Return value:  Size  Location     Type
  1019 ;;                  2    0[COMRAM] unsigned short 
  1020 ;; Registers used:
  1021 ;;		wreg, status,2, status,0
  1022 ;; Tracked objects:
  1023 ;;		On entry : 0/0
  1024 ;;		On exit  : 0/0
  1025 ;;		Unchanged: 0/0
  1026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1027 ;;      Params:         2       0       0       0       0       0       0
  1028 ;;      Locals:         0       0       0       0       0       0       0
  1029 ;;      Temps:          2       0       0       0       0       0       0
  1030 ;;      Totals:         4       0       0       0       0       0       0
  1031 ;;Total ram usage:        4 bytes
  1032 ;; Hardware stack levels used:    1
  1033 ;; Hardware stack levels required when called:    2
  1034 ;; This function calls:
  1035 ;;		Nothing
  1036 ;; This function is called by:
  1037 ;;		_set_values_display
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040                           psect	text2,class=CODE,space=0,reloc=2,group=0
  1041                           	line	55
  1042                           global __ptext2
  1043                           __ptext2:
  1044  000012                     psect	text2
  1045                           	file	"interrupcao.c"
  1046                           	line	55
  1047                           	global	__size_of_mask
  1048                           	__size_of_mask	equ	__end_of_mask-_mask
  1049  0000                     	
  1050                           _mask:
  1051  000012                     ;incstack = 0
  1052                           	opt	stack 27
  1053                           	line	56
  1054                           	
  1055                           l975:
  1056  000012                     ;interrupcao.c: 56: switch (num) {
  1057                           	goto	l1019
  1058  000012  EF5D  F000         	line	57
  1059                           ;interrupcao.c: 57: case 0 : return 0x3F;
  1060                           	
  1061                           l42:
  1062  000016                     	
  1063                           l977:
  1064  000016                     	movlw	high(03Fh)
  1065  000016  0E00               	movwf	((c:?_mask+1)),c
  1066  000018  6E02               	movlw	low(03Fh)
  1067  00001A  0E3F               	movwf	((c:?_mask)),c
  1068  00001C  6E01               	goto	l43
  1069  00001E  EF93  F000         	
  1070                           l979:
  1071  000022                     	goto	l43
  1072  000022  EF93  F000         	line	58
  1073                           ;interrupcao.c: 58: case 1 : return 0x06;
  1074                           	
  1075                           l44:
  1076  000026                     	
  1077                           l981:
  1078  000026                     	movlw	high(06h)
  1079  000026  0E00               	movwf	((c:?_mask+1)),c
  1080  000028  6E02               	movlw	low(06h)
  1081  00002A  0E06               	movwf	((c:?_mask)),c
  1082  00002C  6E01               	goto	l43
  1083  00002E  EF93  F000         	
  1084                           l983:
  1085  000032                     	goto	l43
  1086  000032  EF93  F000         	line	59
  1087                           ;interrupcao.c: 59: case 2 : return 0x5B;
  1088                           	
  1089                           l45:
  1090  000036                     	
  1091                           l985:
  1092  000036                     	movlw	high(05Bh)
  1093  000036  0E00               	movwf	((c:?_mask+1)),c
  1094  000038  6E02               	movlw	low(05Bh)
  1095  00003A  0E5B               	movwf	((c:?_mask)),c
  1096  00003C  6E01               	goto	l43
  1097  00003E  EF93  F000         	
  1098                           l987:
  1099  000042                     	goto	l43
  1100  000042  EF93  F000         	line	60
  1101                           ;interrupcao.c: 60: case 3 : return 0x4F;
  1102                           	
  1103                           l46:
  1104  000046                     	
  1105                           l989:
  1106  000046                     	movlw	high(04Fh)
  1107  000046  0E00               	movwf	((c:?_mask+1)),c
  1108  000048  6E02               	movlw	low(04Fh)
  1109  00004A  0E4F               	movwf	((c:?_mask)),c
  1110  00004C  6E01               	goto	l43
  1111  00004E  EF93  F000         	
  1112                           l991:
  1113  000052                     	goto	l43
  1114  000052  EF93  F000         	line	61
  1115                           ;interrupcao.c: 61: case 4 : return 0x66;
  1116                           	
  1117                           l47:
  1118  000056                     	
  1119                           l993:
  1120  000056                     	movlw	high(066h)
  1121  000056  0E00               	movwf	((c:?_mask+1)),c
  1122  000058  6E02               	movlw	low(066h)
  1123  00005A  0E66               	movwf	((c:?_mask)),c
  1124  00005C  6E01               	goto	l43
  1125  00005E  EF93  F000         	
  1126                           l995:
  1127  000062                     	goto	l43
  1128  000062  EF93  F000         	line	62
  1129                           ;interrupcao.c: 62: case 5 : return 0x6D;
  1130                           	
  1131                           l48:
  1132  000066                     	
  1133                           l997:
  1134  000066                     	movlw	high(06Dh)
  1135  000066  0E00               	movwf	((c:?_mask+1)),c
  1136  000068  6E02               	movlw	low(06Dh)
  1137  00006A  0E6D               	movwf	((c:?_mask)),c
  1138  00006C  6E01               	goto	l43
  1139  00006E  EF93  F000         	
  1140                           l999:
  1141  000072                     	goto	l43
  1142  000072  EF93  F000         	line	63
  1143                           ;interrupcao.c: 63: case 6 : return 0x7D;
  1144                           	
  1145                           l49:
  1146  000076                     	
  1147                           l1001:
  1148  000076                     	movlw	high(07Dh)
  1149  000076  0E00               	movwf	((c:?_mask+1)),c
  1150  000078  6E02               	movlw	low(07Dh)
  1151  00007A  0E7D               	movwf	((c:?_mask)),c
  1152  00007C  6E01               	goto	l43
  1153  00007E  EF93  F000         	
  1154                           l1003:
  1155  000082                     	goto	l43
  1156  000082  EF93  F000         	line	64
  1157                           ;interrupcao.c: 64: case 7 : return 0x07;
  1158                           	
  1159                           l50:
  1160  000086                     	
  1161                           l1005:
  1162  000086                     	movlw	high(07h)
  1163  000086  0E00               	movwf	((c:?_mask+1)),c
  1164  000088  6E02               	movlw	low(07h)
  1165  00008A  0E07               	movwf	((c:?_mask)),c
  1166  00008C  6E01               	goto	l43
  1167  00008E  EF93  F000         	
  1168                           l1007:
  1169  000092                     	goto	l43
  1170  000092  EF93  F000         	line	65
  1171                           ;interrupcao.c: 65: case 8 : return 0x7F;
  1172                           	
  1173                           l51:
  1174  000096                     	
  1175                           l1009:
  1176  000096                     	movlw	high(07Fh)
  1177  000096  0E00               	movwf	((c:?_mask+1)),c
  1178  000098  6E02               	movlw	low(07Fh)
  1179  00009A  0E7F               	movwf	((c:?_mask)),c
  1180  00009C  6E01               	goto	l43
  1181  00009E  EF93  F000         	
  1182                           l1011:
  1183  0000A2                     	goto	l43
  1184  0000A2  EF93  F000         	line	66
  1185                           ;interrupcao.c: 66: case 9 : return 0x6F;
  1186                           	
  1187                           l52:
  1188  0000A6                     	
  1189                           l1013:
  1190  0000A6                     	movlw	high(06Fh)
  1191  0000A6  0E00               	movwf	((c:?_mask+1)),c
  1192  0000A8  6E02               	movlw	low(06Fh)
  1193  0000AA  0E6F               	movwf	((c:?_mask)),c
  1194  0000AC  6E01               	goto	l43
  1195  0000AE  EF93  F000         	
  1196                           l1015:
  1197  0000B2                     	goto	l43
  1198  0000B2  EF93  F000         	line	67
  1199                           	
  1200                           l1017:
  1201  0000B6                     ;interrupcao.c: 67: }
  1202                           	goto	l43
  1203  0000B6  EF93  F000         	line	56
  1204                           	
  1205                           l41:
  1206  0000BA                     	
  1207                           l1019:
  1208  0000BA                     	movff	(c:mask@num),??_mask+0+0
  1209  0000BA  C001  F003         	movff	(c:mask@num+1),??_mask+0+0+1
  1210  0000BE  C002  F004         	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  1211                           ; Switch size 1, requested type "space"
  1212                           ; Number of cases is 1, Range of values is 0 to 0
  1213                           ; switch strategies available:
  1214                           ; Name         Instructions Cycles
  1215                           ; simple_byte            4     3 (average)
  1216                           ;	Chosen strategy is simple_byte
  1217                           
  1218                           	movf ??_mask+0+1,c,w
  1219  0000C2  5004               	xorlw	0^0	; case 0
  1220  0000C4  0A00               	skipnz
  1221  0000C6  B4D8               	goto	l1061
  1222  0000C8  EF68  F000         	goto	l43
  1223  0000CC  EF93  F000         	
  1224                           l1061:
  1225  0000D0                     ; Switch size 1, requested type "space"
  1226                           ; Number of cases is 10, Range of values is 0 to 9
  1227                           ; switch strategies available:
  1228                           ; Name         Instructions Cycles
  1229                           ; simple_byte           31    16 (average)
  1230                           ;	Chosen strategy is simple_byte
  1231                           
  1232                           	movf ??_mask+0+0,c,w
  1233  0000D0  5003               	xorlw	0^0	; case 0
  1234  0000D2  0A00               	skipnz
  1235  0000D4  B4D8               	goto	l977
  1236  0000D6  EF0B  F000         	xorlw	1^0	; case 1
  1237  0000DA  0A01               	skipnz
  1238  0000DC  B4D8               	goto	l981
  1239  0000DE  EF13  F000         	xorlw	2^1	; case 2
  1240  0000E2  0A03               	skipnz
  1241  0000E4  B4D8               	goto	l985
  1242  0000E6  EF1B  F000         	xorlw	3^2	; case 3
  1243  0000EA  0A01               	skipnz
  1244  0000EC  B4D8               	goto	l989
  1245  0000EE  EF23  F000         	xorlw	4^3	; case 4
  1246  0000F2  0A07               	skipnz
  1247  0000F4  B4D8               	goto	l993
  1248  0000F6  EF2B  F000         	xorlw	5^4	; case 5
  1249  0000FA  0A01               	skipnz
  1250  0000FC  B4D8               	goto	l997
  1251  0000FE  EF33  F000         	xorlw	6^5	; case 6
  1252  000102  0A03               	skipnz
  1253  000104  B4D8               	goto	l1001
  1254  000106  EF3B  F000         	xorlw	7^6	; case 7
  1255  00010A  0A01               	skipnz
  1256  00010C  B4D8               	goto	l1005
  1257  00010E  EF43  F000         	xorlw	8^7	; case 8
  1258  000112  0A0F               	skipnz
  1259  000114  B4D8               	goto	l1009
  1260  000116  EF4B  F000         	xorlw	9^8	; case 9
  1261  00011A  0A01               	skipnz
  1262  00011C  B4D8               	goto	l1013
  1263  00011E  EF53  F000         	goto	l43
  1264  000122  EF93  F000         
  1265                           	line	67
  1266                           	
  1267                           l53:
  1268  000126                     	line	68
  1269                           	
  1270                           l43:
  1271  000126                     	return	;funcret
  1272  000126  0012               	opt stack 0
  1273                           GLOBAL	__end_of_mask
  1274                           	__end_of_mask:
  1275  000128                     	signat	_mask,4218
  1276                           	global	_init_regs
  1277                           
  1278 ;; *************** function _init_regs *****************
  1279 ;; Defined at:
  1280 ;;		line 111 in file "interrupcao.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;		None
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;		None
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      void 
  1287 ;; Registers used:
  1288 ;;		wreg, status,2
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1294 ;;      Params:         0       0       0       0       0       0       0
  1295 ;;      Locals:         0       0       0       0       0       0       0
  1296 ;;      Temps:          0       0       0       0       0       0       0
  1297 ;;      Totals:         0       0       0       0       0       0       0
  1298 ;;Total ram usage:        0 bytes
  1299 ;; Hardware stack levels used:    1
  1300 ;; Hardware stack levels required when called:    2
  1301 ;; This function calls:
  1302 ;;		Nothing
  1303 ;; This function is called by:
  1304 ;;		_main
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           psect	text3,class=CODE,space=0,reloc=2,group=0
  1308                           	line	111
  1309                           global __ptext3
  1310                           __ptext3:
  1311  000300                     psect	text3
  1312                           	file	"interrupcao.c"
  1313                           	line	111
  1314                           	global	__size_of_init_regs
  1315                           	__size_of_init_regs	equ	__end_of_init_regs-_init_regs
  1316  0000                     	
  1317                           _init_regs:
  1318  000300                     ;incstack = 0
  1319                           	opt	stack 28
  1320                           	line	113
  1321                           	
  1322                           l939:
  1323  000300                     ;interrupcao.c: 113: RCONbits.IPEN = 0;
  1324                           	bcf	((c:4048)),c,7	;volatile
  1325  000300  9ED0               	line	114
  1326                           ;interrupcao.c: 114: INTCONbits.GIE = 1;
  1327                           	bsf	((c:4082)),c,7	;volatile
  1328  000302  8EF2               	line	115
  1329                           ;interrupcao.c: 115: INTCONbits.PEIE = 1;
  1330                           	bsf	((c:4082)),c,6	;volatile
  1331  000304  8CF2               	line	117
  1332                           ;interrupcao.c: 117: INTCON3bits.INT1IE = 1;
  1333                           	bsf	((c:4080)),c,3	;volatile
  1334  000306  86F0               	line	118
  1335                           ;interrupcao.c: 118: INTCON3bits.INT1IF = 0;
  1336                           	bcf	((c:4080)),c,0	;volatile
  1337  000308  90F0               	line	119
  1338                           ;interrupcao.c: 119: INTCON2bits.INTEDG1 = 1;
  1339                           	bsf	((c:4081)),c,5	;volatile
  1340  00030A  8AF1               	line	121
  1341                           ;interrupcao.c: 121: INTCONbits.TMR0IE = 1;
  1342                           	bsf	((c:4082)),c,5	;volatile
  1343  00030C  8AF2               	line	122
  1344                           ;interrupcao.c: 122: INTCONbits.TMR0IF = 0;
  1345                           	bcf	((c:4082)),c,2	;volatile
  1346  00030E  94F2               	line	124
  1347                           	
  1348                           l941:
  1349  000310                     ;interrupcao.c: 124: T0CON = 0b11000111;
  1350                           	movlw	low(0C7h)
  1351  000310  0EC7               	movwf	((c:4053)),c	;volatile
  1352  000312  6ED5               	line	131
  1353                           ;interrupcao.c: 131: TMR0L = 5;
  1354                           	movlw	low(05h)
  1355  000314  0E05               	movwf	((c:4054)),c	;volatile
  1356  000316  6ED6               	line	132
  1357                           ;interrupcao.c: 132: ADCON1 = 0x0F;
  1358                           	movlw	low(0Fh)
  1359  000318  0E0F               	movwf	((c:4033)),c	;volatile
  1360  00031A  6EC1               	line	133
  1361                           ;interrupcao.c: 133: PORTA = 0;
  1362                           	movlw	low(0)
  1363  00031C  0E00               	movwf	((c:3968)),c	;volatile
  1364  00031E  6E80               	line	134
  1365                           ;interrupcao.c: 134: PORTD = 0;
  1366                           	movlw	low(0)
  1367  000320  0E00               	movwf	((c:3971)),c	;volatile
  1368  000322  6E83               	line	135
  1369                           ;interrupcao.c: 135: TRISA = 0;
  1370                           	movlw	low(0)
  1371  000324  0E00               	movwf	((c:3986)),c	;volatile
  1372  000326  6E92               	line	136
  1373                           ;interrupcao.c: 136: TRISD = 0;
  1374                           	movlw	low(0)
  1375  000328  0E00               	movwf	((c:3989)),c	;volatile
  1376  00032A  6E95               	line	139
  1377                           ;interrupcao.c: 139: disp_1 = 0;
  1378                           	movlw	high(0)
  1379  00032C  0E00               	movwf	((c:_disp_1+1)),c
  1380  00032E  6E19               	movlw	low(0)
  1381  000330  0E00               	movwf	((c:_disp_1)),c
  1382  000332  6E18               	line	140
  1383                           ;interrupcao.c: 140: disp_2 = 0;
  1384                           	movlw	high(0)
  1385  000334  0E00               	movwf	((c:_disp_2+1)),c
  1386  000336  6E17               	movlw	low(0)
  1387  000338  0E00               	movwf	((c:_disp_2)),c
  1388  00033A  6E16               	line	141
  1389                           ;interrupcao.c: 141: disp_3 = 0;
  1390                           	movlw	high(0)
  1391  00033C  0E00               	movwf	((c:_disp_3+1)),c
  1392  00033E  6E15               	movlw	low(0)
  1393  000340  0E00               	movwf	((c:_disp_3)),c
  1394  000342  6E14               	line	142
  1395                           ;interrupcao.c: 142: disp_4 = 0;
  1396                           	movlw	high(0)
  1397  000344  0E00               	movwf	((c:_disp_4+1)),c
  1398  000346  6E13               	movlw	low(0)
  1399  000348  0E00               	movwf	((c:_disp_4)),c
  1400  00034A  6E12               	line	143
  1401                           ;interrupcao.c: 143: count = 0;
  1402                           	movlw	high(0)
  1403  00034C  0E00               	movwf	((c:_count+1)),c
  1404  00034E  6E11               	movlw	low(0)
  1405  000350  0E00               	movwf	((c:_count)),c
  1406  000352  6E10               	line	144
  1407                           	
  1408                           l66:
  1409  000354                     	return	;funcret
  1410  000354  0012               	opt stack 0
  1411                           GLOBAL	__end_of_init_regs
  1412                           	__end_of_init_regs:
  1413  000356                     	signat	_init_regs,89
  1414                           	global	_isr
  1415                           
  1416 ;; *************** function _isr *****************
  1417 ;; Defined at:
  1418 ;;		line 146 in file "interrupcao.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;		None
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;		None
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  1    wreg      void 
  1425 ;; Registers used:
  1426 ;;		wreg, status,2, status,0, cstack
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1432 ;;      Params:         0       0       0       0       0       0       0
  1433 ;;      Locals:         0       0       0       0       0       0       0
  1434 ;;      Temps:          0       0       0       0       0       0       0
  1435 ;;      Totals:         0       0       0       0       0       0       0
  1436 ;;Total ram usage:        0 bytes
  1437 ;; Hardware stack levels used:    1
  1438 ;; Hardware stack levels required when called:    1
  1439 ;; This function calls:
  1440 ;;		_set_incr
  1441 ;; This function is called by:
  1442 ;;		Interrupt level 2
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           psect	intcode,class=CODE,space=0,reloc=2
  1446                           global __pintcode
  1447                           __pintcode:
  1448  000008                     psect	intcode
  1449                           	file	"interrupcao.c"
  1450                           	line	146
  1451                           	global	__size_of_isr
  1452                           	__size_of_isr	equ	__end_of_isr-_isr
  1453  0000                     	
  1454                           _isr:
  1455  000008                     ;incstack = 0
  1456                           	opt	stack 27
  1457                           	bsf int$flags,1,c ;set compiler interrupt flag (level 2)
  1458  000008  821A               	global	int_func
  1459                           	call	int_func,f	;refresh shadow registers
  1460  00000A  EDE9  F000         psect	intcode_body,class=CODE,space=0,reloc=2
  1461                           global __pintcode_body
  1462                           __pintcode_body:
  1463  0001D2                     int_func:
  1464  0001D2                     
  1465                           	pop	; remove dummy address from shadow register refresh
  1466  0001D2  0006               	line	147
  1467                           	
  1468                           i2l943:
  1469  0001D4                     ;interrupcao.c: 147: if(INTCON3bits.INT1IF) {
  1470                           	btfss	((c:4080)),c,0	;volatile
  1471  0001D4  A0F0               	goto	i2u5_41
  1472  0001D6  EFEF  F000         	goto	i2u5_40
  1473  0001DA  EFF1  F000         i2u5_41:
  1474  0001DE                     	goto	i2l71
  1475  0001DE  EF06  F001         i2u5_40:
  1476  0001E2                     	line	148
  1477                           	
  1478                           i2l945:
  1479  0001E2                     ;interrupcao.c: 148: INTCON3bits.INT1IF = 0;
  1480                           	bcf	((c:4080)),c,0	;volatile
  1481  0001E2  90F0               	line	149
  1482                           	
  1483                           i2l947:
  1484  0001E4                     ;interrupcao.c: 149: stop == 0 ? stop ++ : stop--;
  1485                           	movf	((c:_stop)),c,w
  1486  0001E4  500E               iorwf	((c:_stop+1)),c,w
  1487  0001E6  100F               	btfss	status,2
  1488  0001E8  A4D8               	goto	i2u6_41
  1489  0001EA  EFF9  F000         	goto	i2u6_40
  1490  0001EE  EFFB  F000         
  1491                           i2u6_41:
  1492  0001F2                     	goto	i2l951
  1493  0001F2  EFFF  F000         i2u6_40:
  1494  0001F6                     	
  1495                           i2l949:
  1496  0001F6                     	infsnz	((c:_stop)),c
  1497  0001F6  4A0E               	incf	((c:_stop+1)),c
  1498  0001F8  2A0F               	goto	i2l81
  1499  0001FA  EF35  F001         	
  1500                           i2l73:
  1501  0001FE                     	
  1502                           i2l951:
  1503  0001FE                     	decf	((c:_stop)),c
  1504  0001FE  060E               	btfss	status,0
  1505  000200  A0D8               	decf	((c:_stop+1)),c
  1506  000202  060F               	goto	i2l81
  1507  000204  EF35  F001         	
  1508                           i2l75:
  1509  000208                     	line	150
  1510                           ;interrupcao.c: 150: } else if( INTCONbits.TMR0IF){
  1511                           	goto	i2l81
  1512  000208  EF35  F001         	
  1513                           i2l71:
  1514  00020C                     	btfss	((c:4082)),c,2	;volatile
  1515  00020C  A4F2               	goto	i2u7_41
  1516  00020E  EF0B  F001         	goto	i2u7_40
  1517  000212  EF0D  F001         i2u7_41:
  1518  000216                     	goto	i2l81
  1519  000216  EF35  F001         i2u7_40:
  1520  00021A                     	line	151
  1521                           	
  1522                           i2l953:
  1523  00021A                     ;interrupcao.c: 151: if(stop == 0){
  1524                           	movf	((c:_stop)),c,w
  1525  00021A  500E               iorwf	((c:_stop+1)),c,w
  1526  00021C  100F               	btfss	status,2
  1527  00021E  A4D8               	goto	i2u8_41
  1528  000220  EF14  F001         	goto	i2u8_40
  1529  000224  EF16  F001         
  1530                           i2u8_41:
  1531  000228                     	goto	i2l963
  1532  000228  EF2E  F001         i2u8_40:
  1533  00022C                     	line	152
  1534                           	
  1535                           i2l955:
  1536  00022C                     ;interrupcao.c: 152: if(count == 100){
  1537                           		movlw	100
  1538  00022C  0E64               	xorwf	((c:_count)),c,w
  1539  00022E  1810               iorwf	((c:_count+1)),c,w
  1540  000230  1011               	btfss	status,2
  1541  000232  A4D8               	goto	i2u9_41
  1542  000234  EF1E  F001         	goto	i2u9_40
  1543  000238  EF20  F001         
  1544                           i2u9_41:
  1545  00023C                     	goto	i2l961
  1546  00023C  EF28  F001         i2u9_40:
  1547  000240                     	line	153
  1548                           	
  1549                           i2l957:
  1550  000240                     ;interrupcao.c: 153: set_incr();
  1551                           	call	_set_incr	;wreg free
  1552  000240  EC94  F000         	line	154
  1553                           	
  1554                           i2l959:
  1555  000244                     ;interrupcao.c: 154: count = 0;
  1556                           	movlw	high(0)
  1557  000244  0E00               	movwf	((c:_count+1)),c
  1558  000246  6E11               	movlw	low(0)
  1559  000248  0E00               	movwf	((c:_count)),c
  1560  00024A  6E10               	line	155
  1561                           ;interrupcao.c: 155: } else {
  1562                           	goto	i2l963
  1563  00024C  EF2E  F001         	
  1564                           i2l79:
  1565  000250                     	line	156
  1566                           	
  1567                           i2l961:
  1568  000250                     ;interrupcao.c: 156: count ++;
  1569                           	infsnz	((c:_count)),c
  1570  000250  4A10               	incf	((c:_count+1)),c
  1571  000252  2A11               	goto	i2l963
  1572  000254  EF2E  F001         	line	157
  1573                           	
  1574                           i2l80:
  1575  000258                     	goto	i2l963
  1576  000258  EF2E  F001         	line	158
  1577                           	
  1578                           i2l78:
  1579  00025C                     	line	159
  1580                           	
  1581                           i2l963:
  1582  00025C                     ;interrupcao.c: 157: };interrupcao.c: 158: };interrupcao.c: 159: TMR0L = 5;
  1583                           	movlw	low(05h)
  1584  00025C  0E05               	movwf	((c:4054)),c	;volatile
  1585  00025E  6ED6               	line	160
  1586                           	
  1587                           i2l965:
  1588  000260                     ;interrupcao.c: 160: INTCONbits.TMR0IF = 0;
  1589                           	bcf	((c:4082)),c,2	;volatile
  1590  000260  94F2               	goto	i2l81
  1591  000262  EF35  F001         	line	161
  1592                           	
  1593                           i2l77:
  1594  000266                     	goto	i2l81
  1595  000266  EF35  F001         	line	162
  1596                           	
  1597                           i2l76:
  1598  00026A                     	
  1599                           i2l81:
  1600  00026A                     	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  1601  00026A  921A               	retfie f
  1602  00026C  0011               	opt stack 0
  1603                           GLOBAL	__end_of_isr
  1604                           	__end_of_isr:
  1605  00026E                     	signat	_isr,89
  1606                           	global	_set_incr
  1607                           
  1608 ;; *************** function _set_incr *****************
  1609 ;; Defined at:
  1610 ;;		line 92 in file "interrupcao.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;		None
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;		None
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  1    wreg      void 
  1617 ;; Registers used:
  1618 ;;		wreg, status,2, status,0
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1624 ;;      Params:         0       0       0       0       0       0       0
  1625 ;;      Locals:         0       0       0       0       0       0       0
  1626 ;;      Temps:          0       0       0       0       0       0       0
  1627 ;;      Totals:         0       0       0       0       0       0       0
  1628 ;;Total ram usage:        0 bytes
  1629 ;; Hardware stack levels used:    1
  1630 ;; This function calls:
  1631 ;;		Nothing
  1632 ;; This function is called by:
  1633 ;;		_isr
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           psect	text5,class=CODE,space=0,reloc=2,group=0
  1637                           	line	92
  1638                           global __ptext5
  1639                           __ptext5:
  1640  000128                     psect	text5
  1641                           	file	"interrupcao.c"
  1642                           	line	92
  1643                           	global	__size_of_set_incr
  1644                           	__size_of_set_incr	equ	__end_of_set_incr-_set_incr
  1645  0000                     	
  1646                           _set_incr:
  1647  000128                     ;incstack = 0
  1648                           	opt	stack 27
  1649                           	line	93
  1650                           	
  1651                           i2l915:
  1652  000128                     ;interrupcao.c: 93: disp_4 += 1;
  1653                           	infsnz	((c:_disp_4)),c
  1654  000128  4A12               	incf	((c:_disp_4+1)),c
  1655  00012A  2A13               	line	94
  1656                           	
  1657                           i2l917:
  1658  00012C                     ;interrupcao.c: 94: if(disp_4 == 10){
  1659                           		movlw	10
  1660  00012C  0E0A               	xorwf	((c:_disp_4)),c,w
  1661  00012E  1812               iorwf	((c:_disp_4+1)),c,w
  1662  000130  1013               	btfss	status,2
  1663  000132  A4D8               	goto	i2u1_41
  1664  000134  EF9E  F000         	goto	i2u1_40
  1665  000138  EFA0  F000         
  1666                           i2u1_41:
  1667  00013C                     	goto	i2l63
  1668  00013C  EFE8  F000         i2u1_40:
  1669  000140                     	line	95
  1670                           	
  1671                           i2l919:
  1672  000140                     ;interrupcao.c: 95: disp_4 = 0;
  1673                           	movlw	high(0)
  1674  000140  0E00               	movwf	((c:_disp_4+1)),c
  1675  000142  6E13               	movlw	low(0)
  1676  000144  0E00               	movwf	((c:_disp_4)),c
  1677  000146  6E12               	line	96
  1678                           	
  1679                           i2l921:
  1680  000148                     ;interrupcao.c: 96: disp_3 += 1;
  1681                           	infsnz	((c:_disp_3)),c
  1682  000148  4A14               	incf	((c:_disp_3+1)),c
  1683  00014A  2A15               	line	97
  1684                           	
  1685                           i2l923:
  1686  00014C                     ;interrupcao.c: 97: if(disp_3 == 10){
  1687                           		movlw	10
  1688  00014C  0E0A               	xorwf	((c:_disp_3)),c,w
  1689  00014E  1814               iorwf	((c:_disp_3+1)),c,w
  1690  000150  1015               	btfss	status,2
  1691  000152  A4D8               	goto	i2u2_41
  1692  000154  EFAE  F000         	goto	i2u2_40
  1693  000158  EFB0  F000         
  1694                           i2u2_41:
  1695  00015C                     	goto	i2l63
  1696  00015C  EFE8  F000         i2u2_40:
  1697  000160                     	line	98
  1698                           	
  1699                           i2l925:
  1700  000160                     ;interrupcao.c: 98: disp_3 = 0;
  1701                           	movlw	high(0)
  1702  000160  0E00               	movwf	((c:_disp_3+1)),c
  1703  000162  6E15               	movlw	low(0)
  1704  000164  0E00               	movwf	((c:_disp_3)),c
  1705  000166  6E14               	line	99
  1706                           	
  1707                           i2l927:
  1708  000168                     ;interrupcao.c: 99: disp_2 += 1;
  1709                           	infsnz	((c:_disp_2)),c
  1710  000168  4A16               	incf	((c:_disp_2+1)),c
  1711  00016A  2A17               	line	100
  1712                           	
  1713                           i2l929:
  1714  00016C                     ;interrupcao.c: 100: if(disp_2 == 10){
  1715                           		movlw	10
  1716  00016C  0E0A               	xorwf	((c:_disp_2)),c,w
  1717  00016E  1816               iorwf	((c:_disp_2+1)),c,w
  1718  000170  1017               	btfss	status,2
  1719  000172  A4D8               	goto	i2u3_41
  1720  000174  EFBE  F000         	goto	i2u3_40
  1721  000178  EFC0  F000         
  1722                           i2u3_41:
  1723  00017C                     	goto	i2l63
  1724  00017C  EFE8  F000         i2u3_40:
  1725  000180                     	line	101
  1726                           	
  1727                           i2l931:
  1728  000180                     ;interrupcao.c: 101: disp_2 = 0;
  1729                           	movlw	high(0)
  1730  000180  0E00               	movwf	((c:_disp_2+1)),c
  1731  000182  6E17               	movlw	low(0)
  1732  000184  0E00               	movwf	((c:_disp_2)),c
  1733  000186  6E16               	line	102
  1734                           	
  1735                           i2l933:
  1736  000188                     ;interrupcao.c: 102: disp_1 += 1;
  1737                           	infsnz	((c:_disp_1)),c
  1738  000188  4A18               	incf	((c:_disp_1+1)),c
  1739  00018A  2A19               	line	103
  1740                           	
  1741                           i2l935:
  1742  00018C                     ;interrupcao.c: 103: if(disp_1 == 10){
  1743                           		movlw	10
  1744  00018C  0E0A               	xorwf	((c:_disp_1)),c,w
  1745  00018E  1818               iorwf	((c:_disp_1+1)),c,w
  1746  000190  1019               	btfss	status,2
  1747  000192  A4D8               	goto	i2u4_41
  1748  000194  EFCE  F000         	goto	i2u4_40
  1749  000198  EFD0  F000         
  1750                           i2u4_41:
  1751  00019C                     	goto	i2l63
  1752  00019C  EFE8  F000         i2u4_40:
  1753  0001A0                     	line	104
  1754                           	
  1755                           i2l937:
  1756  0001A0                     ;interrupcao.c: 104: disp_1 = disp_2 = disp_3 = disp_4 = 0;
  1757                           	movlw	high(0)
  1758  0001A0  0E00               	movwf	((c:_disp_4+1)),c
  1759  0001A2  6E13               	movlw	low(0)
  1760  0001A4  0E00               	movwf	((c:_disp_4)),c
  1761  0001A6  6E12               	movff	(c:_disp_4),(c:_disp_3)
  1762  0001A8  C012  F014         	movff	(c:_disp_4+1),(c:_disp_3+1)
  1763  0001AC  C013  F015         	movff	(c:_disp_3),(c:_disp_2)
  1764  0001B0  C014  F016         	movff	(c:_disp_3+1),(c:_disp_2+1)
  1765  0001B4  C015  F017         	movff	(c:_disp_2),(c:_disp_1)
  1766  0001B8  C016  F018         	movff	(c:_disp_2+1),(c:_disp_1+1)
  1767  0001BC  C017  F019         	goto	i2l63
  1768  0001C0  EFE8  F000         	line	105
  1769                           	
  1770                           i2l62:
  1771  0001C4                     	goto	i2l63
  1772  0001C4  EFE8  F000         	line	106
  1773                           	
  1774                           i2l61:
  1775  0001C8                     	goto	i2l63
  1776  0001C8  EFE8  F000         	line	107
  1777                           	
  1778                           i2l60:
  1779  0001CC                     	goto	i2l63
  1780  0001CC  EFE8  F000         	line	108
  1781                           	
  1782                           i2l59:
  1783  0001D0                     	line	109
  1784                           	
  1785                           i2l63:
  1786  0001D0                     	return	;funcret
  1787  0001D0  0012               	opt stack 0
  1788                           GLOBAL	__end_of_set_incr
  1789                           	__end_of_set_incr:
  1790  0001D2                     	signat	_set_incr,89
  1791                           	GLOBAL	__activetblptr
  1792                           __activetblptr	EQU	2
  1793  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  1794                           	PSECT	rparam,class=COMRAM,space=1,noexec
  1795                           	GLOBAL	__Lrparam
  1796                           	FNCONF	rparam,??,?
  1797                           	GLOBAL	___rparam_used
  1798                           	___rparam_used EQU 1
  1799  0000                     	GLOBAL	___param_bank
  1800                           	___param_bank EQU 0
  1801  0000                     GLOBAL	__Lparam, __Hparam
  1802                           GLOBAL	__Lrparam, __Hrparam
  1803                           __Lparam	EQU	__Lrparam
  1804  0000                     __Hparam	EQU	__Hrparam
  1805  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
  1806                           	global	btemp
  1807                           btemp:
  1808  00001A                     	ds	1
  1809  00001A                     	global	int$flags
  1810                           	int$flags	set btemp
  1811  0000                     	global	wtemp8
  1812                           	wtemp8 set btemp+1
  1813  0000                     	global	ttemp5
  1814                           	ttemp5 set btemp+1
  1815  0000                     	global	ttemp6
  1816                           	ttemp6 set btemp+4
  1817  0000                     	global	ttemp7
  1818                           	ttemp7 set btemp+8
  1819  0000                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     13      25
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_set_values_display
    _set_values_display->_mask

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     718
                          _init_regs
                 _set_values_display
 ---------------------------------------------------------------------------------
 (1) _set_values_display                                   9     1      8     718
                                              4 COMRAM     9     1      8
                               _mask
 ---------------------------------------------------------------------------------
 (2) _mask                                                 4     2      2     326
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_regs                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  0     0      0       0
                           _set_incr
 ---------------------------------------------------------------------------------
 (4) _set_incr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_regs
   _set_values_display
     _mask

 _isr (ROOT)
   _set_incr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      D      19       1       19.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      19      15        0.0%
DATA                 0      0      19       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Oct 03 00:35:20 2018

                         l41 00BA                           l50 0086                           l42 0016  
                         l51 0096                           l43 0126                           l52 00A6  
                         l44 0026                           l53 0126                           l45 0036  
                         l46 0046                           l47 0056                           l48 0066  
                         l56 02FE                           l49 0076                           l66 0354  
                         l86 035E                           l87 0386                           l88 038A  
                         l89 038A                  __CFG_BORV$3 000000                 __CFG_CP0$OFF 000000  
               __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000  
                __CFG_OSC$HS 000000                  __CFG_LVP$ON 000000                          l941 0310  
                        l939 0300                          l981 0026                          l991 0052  
                        l983 0032                          l975 0012                          l993 0056  
                        l985 0036                          l977 0016                          l995 0062  
                        l987 0042                          l979 0022                          l997 0066  
                        l989 0046                          l999 0072                 __CFG_CPB$OFF 000000  
                        u107 0286                          u117 02AA                          u127 02CE  
                        u137 02F2                 __CFG_CPD$OFF 000000                          _isr 0008  
                        wreg 000FE8                 __CFG_WDT$OFF 000000                         l1001 0076  
                       l1011 00A2                         l1003 0082                         l1013 00A6  
                       l1005 0086                         l1015 00B2                         l1007 0092  
                       l1031 0290                         l1017 00B6                         l1009 0096  
                       l1041 02C6                         l1033 0292                         l1025 026E  
                       l1019 00BA                         l1051 02FC                         l1043 02C8  
                       l1035 02A2                         l1027 027E                         l1061 00D0  
                       l1045 02D8                         l1037 02B4                         l1029 0280  
                       l1053 0356                         l1047 02EA                         l1039 02B6  
                       l1055 035E                         l1049 02EC                         ?_isr 0001  
                       i2l60 01CC                         i2l61 01C8                         i2l62 01C4  
                       i2l63 01D0                         i2l71 020C                         i2l80 0258  
                       i2l73 01FE                         i2l81 026A                         i2l59 01D0  
                       i2l75 0208                         i2l76 026A                         i2l77 0266  
                       i2l78 025C                         i2l79 0250                         _main 0356  
                       _mask 0012                         btemp 001A                         _stop 000E  
                       start 000E                __CFG_IESO$OFF 000000                __CFG_MCLRE$ON 000000  
               ___param_bank 000000                        ??_isr 0001                        ?_main 0001  
                      ?_mask 0001                        _T0CON 000FD5                        i2l921 0148  
                      i2l931 0180                        i2l923 014C                        i2l915 0128  
                      i2l933 0188                        i2l925 0160                        i2l917 012C  
                      i2l935 018C                        i2l927 0168                        i2l919 0140  
                      i2l951 01FE                        i2l943 01D4                        i2l937 01A0  
                      i2l929 016C                        i2l961 0250                        i2l953 021A  
                      i2l945 01E2                        i2l955 022C                        i2l963 025C  
                      i2l947 01E4                        i2l965 0260                        i2l957 0240  
                      i2l949 01F6                        i2l959 0244                        _TMR0L 000FD6  
                      _PORTA 000F80                        _PORTD 000F83                        _TRISA 000F92  
                      _TRISD 000F95                __CFG_PWRT$OFF 000000                __CFG_WRT0$OFF 000000  
              __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000  
             __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000  
             __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000                __CFG_WRTB$OFF 000000  
              __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000               __CFG_EBTRB$OFF 000000  
                      _count 0010                        ttemp5 001B                        ttemp6 001E  
                      ttemp7 0022                        status 000FD8                        wtemp8 001B  
             __CFG_PBADEN$ON 000000              __initialization 038E                 __end_of_main 038E  
               __end_of_mask 0128                       ??_main 000E                       ??_mask 0003  
              __activetblptr 000002  __size_of_set_values_display 0092                       _ADCON1 000FC1  
                     i2u1_40 0140                       i2u1_41 013C                       i2u2_40 0160  
                     i2u2_41 015C                       i2u3_40 0180                       i2u3_41 017C  
                     i2u4_40 01A0                       i2u4_41 019C                       i2u5_40 01E2  
                     i2u5_41 01DE                       i2u6_40 01F6                       i2u6_41 01F2  
                     i2u7_40 021A                       i2u7_41 0216                       i2u8_40 022C  
                     i2u8_41 0228                       i2u9_40 0240                       i2u9_41 023C  
             __CFG_XINST$OFF 000000               __CFG_STVREN$ON 000000                       _disp_1 0018  
                     _disp_2 0016                       _disp_3 0014                       _disp_4 0012  
                     clear_0 0394             __end_of_set_incr 01D2                       tblptru 000FF8  
                 __accesstop 0080      __end_of__initialization 039A                ___rparam_used 000001  
             __pcstackCOMRAM 0001           __size_of_init_regs 0056                      __Hparam 0000  
                    __Lparam 0000                    ?_set_incr 0001                      __pcinit 038E  
                    __ramtop 0600                      __ptext0 0356                      __ptext1 026E  
                    __ptext2 0012                      __ptext3 0300                      __ptext5 0128  
               __size_of_isr 0266            __end_of_init_regs 0356               __pintcode_body 01D2  
       end_of_initialization 039A                      mask@num 0001                __Lmediumconst 0000  
                    int_func 01D2                   ??_set_incr 0001                      postinc0 000FEE  
                  _PORTAbits 000F80   __end_of_set_values_display 0300          start_initialization 038E  
                __end_of_isr 026E             __CFG_LPT1OSC$OFF 000000                  __pbssCOMRAM 000E  
                  __pintcode 0008            __size_of_set_incr 00AA                    _init_regs 0300  
                   _RCONbits 000FD0             __CFG_WDTPS$32768 000000                   ?_init_regs 0001  
                _INTCON2bits 000FF1                  _INTCON3bits 000FF0           _set_values_display 026E  
    set_values_display@disp1 0005      set_values_display@disp2 0007      set_values_display@disp3 0009  
    set_values_display@disp4 000B                     __Hrparam 0000                     __Lrparam 0000  
        ?_set_values_display 0005         ??_set_values_display 000D                __size_of_main 0038  
              __size_of_mask 0116                     _set_incr 0128                     int$flags 001A  
                 _INTCONbits 000FF2                  ??_init_regs 0001                     intlevel2 0000  
